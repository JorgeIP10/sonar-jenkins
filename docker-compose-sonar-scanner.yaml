version: "3.8"

services:
  sonarqube:
    image: sonarqube:community
    # For automation, you can use the following healthcheck configuration
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:9000"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"

  sonarscanner:
    image: sonarsource/sonar-scanner-cli
    # For automation, you can use the following depends_on configuration
    # depends_on:
      # sonarqube:
      #   condition: service_healthy
    volumes:
      - .:/usr/src
      - <path_to_your_project>:/usr/src
    environment:
      SONAR_HOST_URL: http://sonarqube:9000
    command: sonar-scanner
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data: